decisions = {

	#Feasts
	feast_0 = {
		only_playable = yes
		potential = {
			is_playable = yes
			NOR = {
				culture_group = druchi_group
				religion = norscan_gods
				religion = northern_gods
				religion = atruhayid
			}
			OR = {
				trait = creature_human
				trait = creature_elf
				trait = creature_dwarf
				trait = creature_chaos_dwarf
				trait = creature_halfling
				trait = creature_nehekharan
			}
			OR = {
				is_feudal = yes
				is_tribal = yes
				is_nomadic = yes
			}
			prisoner = no
			NOR = {
				has_character_modifier = holding_large_feast
				has_character_modifier = large_feast_timer
				has_character_modifier = fabulous_feast
				has_character_flag = guest_feast_started
				liege = {
					has_character_modifier = holding_large_feast
				}
			}
			num_of_vassals = 1
		}
		allow = {
			war = no
			custom_tooltip = {
				text = UNOCCUPIED_DEMESNE_TITLE
				hidden_tooltip = {
					any_demesne_title = {
						NOT = {
							higher_tier_than = count
						}
						is_occupied = no
					}
				}
			}
			prisoner = no
			NOT = {
				is_inaccessible_trigger = yes
			}
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			wealth = 25
			month = 10
			prestige = 100
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision feast_0 for [Root.GetBestName]"
			wealth = -25
			add_character_modifier = {
				name = holding_large_feast
				duration = -1
			}
			set_character_flag = recent_miNOR_decision
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = {
					id = 72999 days = 150
				}
			} # Safety catch flag clearing
			hidden_tooltip = {
				character_event = {
					id = 72109
				}
			}
			if = {
				limit = {
					has_dlc = "Reapers"
				}
				custom_tooltip = {
					text = capital_prospers_custom_tooltip
					hidden_tooltip = {
						capital_scope = {
							change_variable = {
								which = prosperity_value value = 8
							}
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
			modifier = {
				factor = 0
				trait = shy
			}
			modifier = {
				factor = 0
				NOT = {
					diplomacy = 10
				}
			}
			modifier = {
				factor = 0
				has_character_flag = recent_miNOR_decision
				NOT = {
					had_character_flag = {
						flag = recent_miNOR_decision
						days = 730
					}
				}
			}
		}
	}
	summer_fair = { #for old world & halfling
		only_playable = yes
		potential = {
			is_playable = yes
			OR = {
				religion_group = old_world_group
				religion_group = halfling_gods_group
			}
			prisoner = no
			NOR = {
				has_character_modifier = holding_summer_fair
				has_character_modifier = summer_fair_timer
			}
			num_of_vassals = 1
			OR = {
				NOT = {
					has_character_flag = recent_summer_fair
				}
				had_character_flag = {
					flag = recent_summer_fair
					days = 60
				}
			}
		}
		allow = {
			war = no
			custom_tooltip = {
				text = UNOCCUPIED_DEMESNE_TITLE
				hidden_tooltip = {
					any_demesne_title = {
						NOT = {
							higher_tier_than = count
						}
						is_occupied = no
					}
				}
			}
			wealth = 25
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			NOT = {
				is_inaccessible_trigger = yes
			}
			month = 4
			NOT = {
				month = 7
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision summer_fair for [Root.GetBestName]"
			wealth = -25
			add_character_modifier = {
				name = holding_summer_fair
				duration = -1
			}
			set_character_flag = recent_miNOR_decision
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = {
					id = 74047
					days = 60
				}
				character_event = {
					id = 74050
				}
			}
			if = {
				limit = {
					has_dlc = "Reapers"
				}
				custom_tooltip = {
					text = capital_prospers_custom_tooltip
					hidden_tooltip = {
						capital_scope = {
							change_variable = {
								which = prosperity_value value = 8
							}
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
			modifier = {
				factor = 0
				trait = slothful
			}
			modifier = {
				factor = 0
				NOT = {
					stewardship = 10
				}
			}
			modifier = {
				factor = 0
				has_character_flag = recent_miNOR_decision
				NOT = {
					had_character_flag = {
						flag = recent_miNOR_decision
						days = 730
					}
				}
			}
		}
	}
	hold_grand_hunt = { #for old world/gods, chaos group
		only_playable = yes
		potential = {
			is_playable = yes
			age = 16
			is_female = no
			prisoner = no
			OR = {
				religion_group = old_world_group
				religion_group = chaos_gods_group
				religion_group = old_gods_group
			}
			NOR = {
				religion = hashut
				has_character_modifier = holding_grand_hunt
			}
			OR = {
				NOT = {
					has_dlc = "Way of Life"
				}
				has_focus = focus_hunting
			}
		}
		allow = {
			war = no
			custom_tooltip = {
				text = UNOCCUPIED_DEMESNE_TITLE
				hidden_tooltip = {
					any_demesne_title = {
						NOT = {
							higher_tier_than = count
						}
						is_occupied = no
					}
				}
			}
			month = 8
			wealth = 25
			NOR = {
				month = 10
				health_traits = 1
			}
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			NOT = {
				is_inaccessible_trigger = yes
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision hold_grand_hunt for [Root.GetBestName]"
			wealth = -25
			add_character_modifier = {
				name = holding_grand_hunt
				duration = -1
			}
			set_character_flag = recent_miNOR_decision
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = {
					id = 36999 days = 150
				}
			} # Safety catch flag clearing
			hidden_tooltip = {
				character_event = {
					id = 36090 days = 60
				}
				character_event = {
					id = 36080
				}
			}
			if = {
				limit = {
					has_dlc = "Reapers"
				}
				custom_tooltip = {
					text = capital_prospers_custom_tooltip
					hidden_tooltip = {
						capital_scope = {
							change_variable = {
								which = prosperity_value value = 8
							}
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					wealth = 50
				}
			}
			modifier = {
				factor = 0
				NOR = {
					wealth = 200
					has_focus = focus_hunting
				}
			}
			modifier = {
				factor = 0
				trait = craven
			}
			modifier = {
				factor = 0
				NOT = {
					martial = 10
				}
			}
			modifier = {
				factor = 0
				has_character_flag = recent_miNOR_decision
				NOT = {
					had_character_flag = {
						flag = recent_miNOR_decision
						days = 730
					}
				}
			}
		}
	}
	hold_a_epic_tournament  = { #for grail
		is_high_prio = yes
		potential = {
			is_ruler = yes
			demesne_size = 1
			higher_tier_than = BARON
			religion = grail
			is_theocracy = no
			NOR = {
				has_character_flag = no_kingship
				has_character_flag = inherit_war
				has_character_flag = danys_eastern_quest
			}
		}
		allow = {
			war = no
			NOT = {
				any_liege = {
					war = yes
				}
			}
			prisoner = no
			NOT = {
				trait = in_hiding
			}
			is_adult = yes
			treasury = 75
			NOT = {
				trait = incapable
			}
			custom_tooltip = {
				text = hold_a_epic_tournamentREALMTOURNEY
				hidden_tooltip = {
					#Cannot hold tourney if....
					NOT = {
						any_liege = {
							has_character_modifier = holding_epic_tournament
						}
					} #Any liege is holding one
					NOT = {
						#Any grand tournaments are in progress
						top_liege = {
							any_realm_lord = {
								NOT = {
									tier = BARON
								}
								has_character_modifier = holding_epic_tournament
								OR = {
									has_character_flag = grand_tourny
									has_character_flag = king_tourny
								}
							}
						}
					}
					NOT = {
						#Any duke within same kingdom is holding a regional one
						any_liege = {
							tier = KING
							any_vassal = {
								NOT = {
									tier = BARON
								}
								has_character_modifier = holding_epic_tournament
								has_character_flag = NORmal_tourny
							}
						}
					}
					OR = {
						#If sworn directly to emperor and any duke who is also sworn directly is a regional holding one
						higher_tier_than = DUKE
						any_liege = {
							tier = KING
						}
						NOT = {
							any_liege = {
								tier = EMPEROR
								any_vassal = {
									NOT = {
										tier = BARON
									}
									has_character_modifier = holding_epic_tournament
									has_character_flag = NORmal_tourny
								}
							}
						}
					}
				}
			}
			custom_tooltip = {
				text = hold_a_epic_tournamentCOOLDOWN
				hidden_tooltip = {
					OR = {
						NOT = {
							has_character_flag = epic_tournament
						}
						had_character_flag = {
							flag = epic_tournament days = 3650
						}
					}
				}
			}
			custom_tooltip = {
				text = hold_a_epic_tournamentATTENDING
				hidden_tooltip = {
					NOT = {
						has_character_flag = attending_tournament
					}
				}
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision hold_a_epic_tournament  for [Root.GetBestName]"
			clr_character_flag = epic_tournament
			set_character_flag = epic_tournament
			set_character_flag = tourny_in_progress
			set_character_flag = do_not_disturb
			clr_character_flag = tournament_has_ended
			add_character_modifier = {
				name = "holding_epic_tournament"
				duration = 400
			}
			character_event = {
				id = tourney.1 tooltip = "tournament_invite"
			}
			hidden_tooltip = {
				character_event = {
					id = 70001 days = 30
				} # Tournament start
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.02
			}
			modifier = {
				#save up for higher tourney
				factor = 0
				OR = {
					trait = ambitious
					trait = proud
					trait = charitable
				}
				OR = {
					AND = {
						yearly_income = 75
						NOT = {
							treasury = 150
						}
					}
					AND = {
						OR = {
							tier = EMPEROR
							yearly_income = 150
						}
						NOT = {
							treasury = 300
						}
					}
				}
			}
			#AI unlikley to do
			modifier = {
				factor = 0.2
				OR = {
					trait = shy
					trait = greedy
					trait = temperate
					trait = stressed
					trait = depressed
					trait = slothful
				}
			}
			#AI likely to do
			modifier = {
				factor = 5
				OR = {
					trait = gregarious
					trait = charitable
					trait = gluttonous
					trait = hedonist
					trait = duelist
				}
			}
		}
	}
	hold_a_furusiyya  = { #for ormazd_gods_group
		only_independent = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			independent = yes
			NOR = {
				has_character_flag = epic_tournament_furusiyya
				has_character_modifier = epic_tournament_furusiyya
			}
			religion_group = ormazd_gods_group
			OR = {
				gender_equality_trigger = yes
				NOT = {
					is_female = yes
				}
			}
			OR = {
				tier = king
				tier = emperor
			}
			location = {
				owner = {
					character = ROOT
				}
			}
		}
		allow = {
			war = no
			in_command = no
			prisoner = no
			NOT = {
				is_inaccessible_trigger = yes
			}
			age = 16
			prestige = 500
			wealth = 200
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision hold_a_furusiyya  for [Root.GetBestName]"
			set_character_flag = do_not_disturb
			add_character_modifier = {
				name = epic_tournament_furusiyya
				years = 100
				hidden = yes
			}
			clr_character_flag = tournament_has_ended_furusiyya
			hidden_tooltip = {
				character_event = {
					id = 88999 days = 300
				}
			} # Safety catch flag clearing
			wealth = -200
			prestige = 100
			decadence = -5
			character_event = {
				id = 88283 tooltip = "furusiyya_invite"
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					OR = {
						wealth = 1000
						scaled_wealth = 3.0
					}
				}
			}
		}
	}
	hold_nomad_wargames = {	#for nomads

		only_playable = yes
		potential = {
			is_playable = yes
			is_nomadic = yes
			NOR = {
				has_character_modifier = holding_nomad_wargames
				has_character_modifier = held_nomad_wargames
				religion_group = greenskin_gods_group
				religion = asrai_cadai
				trait = creature_beastman
			} #NOR Beastmen
		}
		allow = {
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			is_adult = yes
			prisoner = no
			NOR = {
				trait = incapable
				is_inaccessible_trigger = yes
				religion_group = greenskin_gods_group
				religion = asrai_cadai
				trait = creature_beastman
			} #NOR Beastmen
			war = no
			any_demesne_title = {
				NOT = {
					higher_tier_than = count
				}
				is_occupied = no
			}
			wealth = 20
			prestige = 100
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision hold_nomad_wargames for [Root.GetBestName]"
			wealth = -30
			add_character_modifier = {
				name = holding_nomad_wargames
				duration = -1
			}
			set_character_flag = recent_miNOR_decision
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = {
					id = HL.7000
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
			modifier = {
				factor = 2
				current_heir = {
					dynasty = ROOT
					combat_rating = 8
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					martial = 10
				}
			}
			modifier = {
				factor = 0
				has_character_flag = recent_miNOR_decision
				NOT = {
					had_character_flag = {
						flag = recent_miNOR_decision
						days = 730
					}
				}
			}
		}
	}
	hold_jarilo = {	#for NORsca

		only_playable = yes
		potential = {
			has_dlc = "The Old Gods"
			is_playable = yes
			is_adult = yes
			prisoner = no
			religion = northern_gods
			NOR = {
				has_character_modifier = held_jarilo_timer
				has_character_flag = holding_jarilo
			}
		}
		allow = {
			war = no
			custom_tooltip = {
				text = UNOCCUPIED_DEMESNE_TITLE
				hidden_tooltip = {
					any_demesne_title = {
						NOT = {
							higher_tier_than = count
						}
						is_occupied = no
					}
				}
			}
			NOT = {
				month = 7
			}
			month = 4
			wealth = 50
			prisoner = no
			NOT = {
				is_inaccessible_trigger = yes
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision hold_jarilo for [Root.GetBestName]"
			wealth = -50
			set_character_flag = holding_jarilo
			set_character_flag = recent_miNOR_decision
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = {
					id = TOG.899 days = 150
				}
			} # Safety catch flag clearing
			custom_tooltip = {
				text = prepare_jarilo
				hidden_tooltip = {
					character_event = {
						id = TOG.800
					}
				}
			}
			if = {
				limit = {
					has_dlc = "Reapers"
				}
				custom_tooltip = {
					text = capital_prospers_custom_tooltip
					hidden_tooltip = {
						capital_scope = {
							change_variable = {
								which = prosperity_value value = 8
							}
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					wealth = 300
				}
			}
			modifier = {
				factor = 0
				trait = shy
			}
			modifier = {
				factor = 0
				NOT = {
					diplomacy = 10
				}
			}
			modifier = {
				factor = 0
				has_character_flag = recent_miNOR_decision
				NOT = {
					had_character_flag = {
						flag = recent_miNOR_decision
						days = 730
					}
				}
			}
		}
	}	
	celebrate_passover = {	#for halflings

		#Halfling Pie Week
		only_playable = yes
		is_high_prio = yes
		potential = {
			has_dlc = "Sons of Abraham"
			is_playable = yes
			is_adult = yes
			prisoner = no
			religion_group = halfling_gods_group
			NOR = {
				has_character_modifier = held_passover_timer
				has_character_flag = holding_passover
			}
		}
		allow = {
			war = no
			custom_tooltip = {
				text = UNOCCUPIED_DEMESNE_TITLE
				hidden_tooltip = {
					any_demesne_title = {
						NOT = {
							higher_tier_than = count
						}
						is_occupied = no
					}
				}
			}
			NOT = {
				month = 9
			}
			month = 7
			wealth = 50
			prisoner = no
			NOT = {
				is_inaccessible_trigger = yes
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision celebrate_passover for [Root.GetBestName]"
			wealth = -50
			set_character_flag = holding_passover
			set_character_flag = recent_miNOR_decision
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = {
					id = SoA.599 days = 150
				}
			} # Safety catch flag clearing
			custom_tooltip = {
				text = passover_celebrations
				hidden_tooltip = {
					character_event = {
						id = SoA.500
					}
				}
			}
			if = {
				limit = {
					has_dlc = "Reapers"
				}
				custom_tooltip = {
					text = capital_prospers_custom_tooltip
					hidden_tooltip = {
						capital_scope = {
							change_variable = {
								which = prosperity_value value = 8
							}
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					wealth = 300
				}
			}
			modifier = {
				factor = 0
				trait = shy
			}
			modifier = {
				factor = 0
				NOT = {
					diplomacy = 10
				}
			}
			modifier = {
				factor = 0
				has_character_flag = recent_miNOR_decision
				NOT = {
					had_character_flag = {
						flag = recent_miNOR_decision
						days = 730
					}
				}
			}
		}
	}

	#General decisions
	shut_the_gates = {
		only_rulers = yes
		is_high_prio = yes
		filter = self
		ai_target_filter = self
		potential = {
			has_dlc = "Reapers"
			OR = {
				is_landed = yes
				is_patrician = yes
			}
			NOR = {
				is_tribal = yes
				is_nomadic = yes
				is_inaccessible_trigger = yes
			}
		}
		allow = {
			prisoner = no
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
			OR = {
				trait = paranoid
				custom_tooltip = {
					text = epidemic_present_tooltip
					hidden_tooltip = {
						OR = {
							ai = no
							capital_scope = {
								has_epidemic = yes
							}
						}
						OR = {
							capital_scope = {
								OR = {
									has_epidemic = yes
									any_neighbor_province = {
										has_epidemic = yes
									}
								}
							}
							AND = {
								ai = no
								top_liege = {
									any_realm_province = {
										has_epidemic = yes
									}
								}
							}
						}
					}
				}
			}
			NOT = {
				has_character_modifier = recently_opened_gates
			}
		}
		effect = {
			log = "work decision shut_the_gates for [Root.GetBestName]"
			#Achievement flag
			if = {
				limit = {
					ai = no
				}
				set_character_flag = achievement_no_solicitors
			}
			if = {
				limit = {
					has_miNOR_title = title_commander
				}
				remove_title = title_commander
			}
			set_character_flag = do_not_disturb
			custom_tooltip = {
				text = shut_the_gates_info_tooltip
			}
			add_character_modifier = {
				name = in_seclusion
				duration = -1
			}
			if = {
				# If you are a councillor, stop working and return home
				limit = {
					host = {
						NOT = {
							character = ROOT
						}
					}
					OR = {
						is_councillor = yes
						has_miNOR_title = title_councilmember_king
						has_miNOR_title = title_councilmember_emperor
					}
				}
				force_host = ROOT
			}
			hidden_tooltip = {
				character_event = {
					id = RIP.12000
				}
				any_courtier = {
					# Unlanded councillors stop working in order to go into seclusion with their liege
					limit = {
						prisoner = no
						is_councillor = yes
						is_landed = no
						liege = {
							character = ROOT
						}
						NOT = {
							character = ROOT
						}
					}
					add_character_modifier = {
						name = in_seclusion
						duration = -1
					}
				}
				any_courtier = {
					# Unlanded non-councillors join their liege in seclusion
					limit = {
						prisoner = no
						is_councillor = no
						is_landed = no
						liege = {
							character = ROOT
						}
						NOT = {
							character = ROOT
						}
					}
					add_character_modifier = {
						name = in_seclusion
						duration = -1
					}
				}
				any_courtier = {
					# Landed councillors return home while you, their liege, is in seclusion
					limit = {
						prisoner = no
						OR = {
							is_councillor = yes
							has_miNOR_title = title_councilmember_king
							has_miNOR_title = title_councilmember_emperor
						}
						is_landed = yes
						liege = {
							character = ROOT
						}
						NOT = {
							character = ROOT
						}
					}
					force_host = THIS
				}
				any_courtier = {
					# Landed children being educated in your court are sent home, with the guardianship ending
					limit = {
						prisoner = no
						is_landed = yes
						is_adult = no
						has_guardian = yes
					}
					remove_guardian = yes
				}
				if = {
					#If you are getting educated elsewhere, then go home to be secluded
					limit = {
						NOT = {
							age = 16
						}
						is_abroad = yes
					}
					remove_guardian = yes
					force_host = ROOT
				}
				any_vassal = {
					character_event = {
						id = RIP.12001 days = 7 random = 7
					}
				}
				if = {
					#Notify employer that councillor is going into seclusion
					limit = {
						is_councillor = yes
						liege = {
							ai = no
						}
					}
					liege = {
						letter_event = {
							id = RIP.12101 days = 1
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.2
			modifier = {
				factor = 0.01
				OR = {
					capital_scope = {
						OR = {
							disease = tuberculosis
							disease = measles
						}
					}
				}
			}
			modifier = {
				factor = 0.5
				trait = brave
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			modifier = {
				factor = 2
				trait = stressed
			}
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 10
				trait = paranoid
			}
			modifier = {
				factor = 50
				capital_scope = {
					disease = bubonic_plague
				}
			}
		}
	}
	open_the_gates = {
		only_rulers = yes
		is_high_prio = yes
		filter = self
		potential = {
			is_ruler = yes
			has_character_modifier = in_seclusion
		}
		allow = {
			has_character_modifier = in_seclusion
		}
		effect = {
			log = "work decision open_the_gates for [Root.GetBestName]"
			clr_character_flag = do_not_disturb
			clr_character_flag = exposed_to_outside
			clr_character_flag = seclusion_piling_corpses
			clr_character_flag = seclusion_lazy_seduction
			clr_character_flag = seclusion_nightmares
			clr_character_flag = seclusion_gained_friend
			clr_character_flag = seclusion_child_has_lover
			clr_character_flag = seclusion_tunnel
			clr_character_flag = seclusion_food_events
			custom_tooltip = {
				text = open_the_gates_info_tooltip
			}
			remove_character_modifier = in_seclusion
			add_character_modifier = {
				name = recently_opened_gates
				duration = 365
			}
			hidden_tooltip = {
				clr_character_flag = seclusion_events_on
				character_event = {
					id = RIP.11557 days = 40 random = 20
				} #clears starvation modifiers
				any_courtier = {
					clr_character_flag = seclusion_events_on
					remove_character_modifier = in_seclusion
					character_event = {
						id = RIP.11557 days = 40 random = 20
					} #clears starvation modifiers
				}
				any_vassal = {
					limit = {
						OR = {
							is_councillor = yes
							has_miNOR_title = title_councilmember_king
							has_miNOR_title = title_councilmember_emperor
						}
						is_landed = yes
						liege = {
							character = ROOT
						}
						NOT = {
							has_character_modifier = in_seclusion
						}
						host = {
							NOT = {
								character = ROOT
							}
						}
					}
					force_host = ROOT
				}
			}
			if = {
				# Rejoin your liege's court if both of you are not in seclusion
				limit = {
					OR = {
						is_councillor = yes
						has_miNOR_title = title_councilmember_king
						has_miNOR_title = title_councilmember_emperor
					}
					NOT = {
						liege = {
							has_character_modifier = in_seclusion
						}
					}
				}
				liege = {
					ROOT = {
						force_host = PREV
					}
				}
				if = {
					#Notify employer that councillor is going into seclusion
					limit = {
						is_councillor = yes
						#liege = { ai = no }
					}
					liege = {
						character_event = {
							id = RIP.12100 days = 1
						}
					}
				}
			}
			if = {
				limit = {
					has_character_modifier = secluded_revelry
				} remove_character_modifier = secluded_revelry
			}
			if = {
				limit = {
					has_character_modifier = savoring_the_end_days
				} remove_character_modifier = savoring_the_end_days
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				capital_scope = {
					has_disease = yes
				}
				NOT = {
					has_character_modifier = starving_food_shortage
				}
			}
			modifier = {
				factor = 0.5
				trait = paranoid
			}
			modifier = {
				factor = 3
				trait = brave
			}
			modifier = {
				factor = 3
				capital_scope = {
					has_disease = no
				}
			}
			modifier = {
				factor = 3
				has_character_modifier = starving_food_shortage
			}
		}
	}
	seek_treatment = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			OR = {
				trait = has_tuberculosis
				trait = has_typhoid_fever
				trait = has_typhus
				trait = has_bubonic_plague
				trait = has_measles
				trait = has_small_pox
				trait = has_aztec_disease
				trait = syphilitic
				trait = flu
				trait = dysentery
				trait = gout
				trait = food_poisoning
				trait = rabies
				trait = cancer
				trait = pneumonic
				num_of_symptoms = 1
			}
			has_assigned_miNOR_title = title_court_physician
		}
		allow = {
			custom_tooltip = {
				text = seek_treatment_tooltip_2
				OR = {
					NOT = {
						has_character_flag = being_treated
					}
					had_character_flag = {
						flag = being_treated days = 20
					}
				}
				OR = {
					AND = {
						#if you have a developed disease and want further treatment
						character_disease_trigger = yes
						OR = {
							NOT = {
								has_character_flag = recent_treatment
							}
							had_character_flag = {
								flag = recent_treatment days = 90
							}
						}
					}
					AND = {
						#if you have multiple symptoms and want to seek further treatment
						num_of_symptoms = 2
						OR = {
							NOT = {
								has_character_flag = recent_treatment
							}
							had_character_flag = {
								flag = recent_treatment days = 30
							}
						}
					}
					AND = {
						#if your treatment failed and you want to try again
						character_disease_trigger = no
						num_of_symptoms = 1
						OR = {
							had_character_flag = {
								flag = disease_not_serious days = 10
							} #anti-spam delay since event should handle this NORmally
							had_character_flag = {
								flag = developing_illness days = 10
							}
						}
						OR = {
							NOT = {
								has_character_flag = recent_treatment
							}
							had_character_flag = {
								flag = recent_treatment days = 30
							}
						}
						NOR = {
							has_character_modifier = successful_treatment_1
							has_character_modifier = successful_treatment_2
							has_character_modifier = successful_treatment_3
							has_character_modifier = failed_treatment_1
							has_character_modifier = failed_treatment_2
							has_character_modifier = mystic_treatment_decent
							has_character_modifier = mystic_treatment_poor
							has_character_modifier = mystic_treatment_terrible
							has_character_modifier = symptom_treatment_1
							has_character_modifier = symptom_treatment_2
							has_character_modifier = symptom_treatment_3
							has_character_modifier = symptom_treatment_4
						}
					}
				}
			}
			custom_tooltip = {
				text = seek_treatment_tooltip_1
			}
			custom_tooltip = {
				text = seek_treatment_tooltip_3
				hidden_tooltip = {
					NOR = {
						has_character_modifier = mystic_treatment_decent
						has_character_modifier = successful_treatment_1
						has_character_modifier = successful_treatment_2
						has_character_modifier = successful_treatment_3
					}
				}
			}
		}
		effect = {
			log = "work decision seek_treatment for [Root.GetBestName]"
			set_character_flag = recent_treatment
			hidden_tooltip = {
				remove_treatment_modifiers_effect = yes
			}
			custom_tooltip = {
				text = seek_treatment_tooltip_4
				hidden_tooltip = {
					random_courtier_or_vassal = {
						limit = {
							is_adult = yes
							has_miNOR_title = title_court_physician
							liege = {
								character = ROOT
							}
						}
						character_event = {
							id = RIP.11031
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.25
			modifier = {
				factor = 2
				OR = {
					trait = craven
					trait = paranoid
				}
			}
			modifier = {
				factor = 1.4
				NOT = {
					health = 5
				}
			}
			modifier = {
				factor = 1.4
				NOT = {
					health = 4
				}
			}
			modifier = {
				factor = 1.4
				NOT = {
					health = 3
				}
			}
			modifier = {
				factor = 1.4
				NOT = {
					health = 2
				}
			}
			modifier = {
				factor = 1.4
				NOT = {
					health = 1
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_character_modifier = symptom_treatment_3 #characters don't want to seek treatment when they have a decent one already
					has_character_modifier = symptom_treatment_4
					AND = {
						has_character_modifier = symptom_treatment_2
						developing_epidemic_disease_trigger = no
					}
					has_character_modifier = successful_treatment_2
					has_character_modifier = successful_treatment_3
				}
			}
		}
	}
	employ_court_physician = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			has_dlc = "Reapers"
			NOR = {
				is_tribal = yes
				is_nomadic = yes
				religion = nurgle
				trait = creature_forestspirit
				culture_group = daemonic_group
				trait = creature_treekin
				trait = creature_nehekharan
				trait = creature_slann
				trait = vampire_carstein_visible
				trait = vampire_blood_visible
				trait = vampire_strigoi_visible
				trait = vampire_necrarch_visible
				trait = vampire_jade_visible
				trait = vampire_mahtmasi_visible
				trait = vampire_lahmian_visible
				trait = vampire_carstein_hidden
				trait = vampire_blood_hidden
				trait = vampire_strigoi_hidden
				trait = vampire_necrarch_hidden
				trait = vampire_jade_hidden
				trait = vampire_mahtmasi_hidden
				trait = vampire_lahmian_hidden
				trait = khorne_demon
				trait = slaanesh_demon
				trait = tzeentch_demon
				trait = hashut_kdaai
				trait = nurgle_demon
				trait = creature_skink
				trait = creature_saurus
				trait = creature_orc
				trait = creature_goblin
				trait = creature_snotling
			}
		}
		allow = {
			hidden_tooltip = {
				OR = {
					wealth = 25
					ai = no
				}
			}
			NOR = {
				has_character_modifier = in_seclusion
				has_assigned_miNOR_title = title_court_physician
			}
			custom_tooltip = {
				text = 3_year_physician_cooldown
				hidden_tooltip = {
					OR = {
						NOT = {
							has_character_flag = 3_year_physician_cooldown
						}
						had_character_flag = {
							flag = 3_year_physician_cooldown days = 1095
						}
					}
				}
			}
		}
		effect = {
			log = "work decision employ_court_physician for [Root.GetBestName]"
			custom_tooltip = {
				text = employ_court_physician_tooltip
				hidden_tooltip = {
					character_event = {
						id = RIP.11050
					}
					clr_character_flag = 3_year_physician_cooldown
					set_character_flag = 3_year_physician_cooldown
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.1
			modifier = {
				factor = 0
				tier = COUNT
				NOT = {
					any_close_relative = {
						ai = no
					}
				}
			}
			modifier = {
				factor = 0.5
				NOR = {
					tier = KING
					tier = EMPEROR
				}
			}
			modifier = {
				factor = 2
				trait = paranoid
			}
			modifier = {
				factor = 10
				OR = {
					is_ill = yes
					num_of_symptoms = 1
				}
			}
		}
	}
	form_new_kingdom = {
		only_independent = yes
		is_high_prio = yes
		potential = {
			NOT = {
				religion_group = greenskin_gods_group
			}
			is_playable = yes
			tier = DUKE
			NOT = {
				tier = KING
			}
			has_dlc = "Charlemagne"
			holy_order = no
			NOT = {
				has_game_rule = {
					name = dynamic_realms
					value = off
				}
			}
			OR = {
				ai = no
				AND = {
					trait = proud
					prestige = 5000
				}
				AND = {
					trait = ambitious
					prestige = 5000
				}
				AND = {
					realm_size = 70
					any_demesne_title = {
						count = 4
						tier = DUKE
					}
				}
				prestige = 15000
			}
		}
		allow = {
			is_adult = yes
			prisoner = no
			NOT = {
				trait = incapable
			}
			independent = yes
			prestige = 1000
			OR = {
				realm_size = 35
				custom_tooltip = {
					text = form_new_kingdom_requirement_tooltip
					hidden_tooltip = {
						any_demesne_title = {
							count = 3
							tier = DUKE
						}
					}
				}
			}
			wealth = 300
		}
		effect = {
			log = "work decision form_new_kingdom for [Root.GetBestName]"
			primary_title = {
				create_title = {
					tier = KING
					landless = no
					temporary = no
					custom_created = yes
					culture = ROOT
					holder = ROOT
					base_title = THIS
					copy_title_laws = yes
				}
				hidden_tooltip = {
					empire = {
						ROOT = {
							primary_title = {
								de_jure_liege = PREVPREV
							}
						}
					}
					ROOT = {
						primary_title = {
							holder_scope = {
								any_title_under = {
									limit = {
										tier = DUKE
										kingdom = {
											has_holder = no
										}
									}
									de_jure_liege = PREVPREV
								}
								any_title_under = {
									limit = {
										tier = COUNT
										location = {
											duchy = {
												kingdom = {
													has_holder = no
												}
												NOT = {
													de_jure_liege_or_above = PREVPREVPREVPREV
												}
												ROOT = {
													completely_controls = PREV
												}
											}
										}
									}
									location = {
										duchy = {
											de_jure_liege = PREVPREVPREVPREV
										}
									}
								}
							}
						}
					}
				}
			}
			wealth = -300
			custom_tooltip = {
				text = form_new_kingdom_tooltip
			}
			chronicle = {
				entry = CHRONICLE_FOUNDED_NEW_KINGDOM_OR_EMPIRE
				portrait = [Root.GetID]
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
		}
	}
	form_new_empire = {
		only_independent = yes
		is_high_prio = yes
		potential = {
			NOT = {
				religion_group = greenskin_gods_group
			}
			is_playable = yes
			tier = KING
			is_nomadic = no
			has_dlc = "Charlemagne"
			holy_order = no
			NOT = {
				tier = EMPEROR
			}
			OR = {
				ai = no
				AND = {
					trait = proud
					prestige = 40000
				}
				AND = {
					trait = ambitious
					prestige = 40000
				}
				prestige = 120000
			}
			NOT = {
				has_game_rule = {
					name = dynamic_realms
					value = off
				}
			}
		}
		allow = {
			is_adult = yes
			prisoner = no
			NOT = {
				trait = incapable
			}
			independent = yes
			prestige = 8000
			OR = {
				realm_size = 180
				custom_tooltip = {
					text = form_new_empire_requirement_tooltip
					hidden_tooltip = {
						any_demesne_title = {
							count = 3
							tier = KING
						}
					}
				}
			}
			wealth = 1000
		}
		effect = {
			log = "work decision form_new_empire for [Root.GetBestName]"
			primary_title = {
				create_title = {
					tier = EMPEROR
					landless = no
					temporary = no
					custom_created = yes
					culture = ROOT
					holder = ROOT
					base_title = THIS
					copy_title_laws = yes
				}
				hidden_tooltip = {
					ROOT = {
						primary_title = {
							holder_scope = {
								any_title_under = {
									limit = {
										tier = KING
										empire = {
											has_holder = no
										}
									}
									de_jure_liege = PREVPREV
								}
								any_title_under = {
									limit = {
										tier = DUKE
										location = {
											kingdom = {
												empire = {
													has_holder = no
												}
												NOT = {
													de_jure_liege_or_above = PREVPREVPREVPREV
												}
												ROOT = {
													completely_controls = PREV
												}
											}
										}
									}
									location = {
										kingdom = {
											de_jure_liege = PREVPREVPREVPREV
										}
									}
								}
							}
						}
					}
				}
			}
			wealth = -1000
			custom_tooltip = {
				text = form_new_empire_tooltip
			}
			chronicle = {
				entry = CHRONICLE_FOUNDED_NEW_KINGDOM_OR_EMPIRE
				portrait = [Root.GetID]
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
		}
	}
	conscript_merchant_ships = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			NOT = {
				has_earmarked_regiments = conscripted_merchant_ships
			}
			has_overseas_holdings = yes
		}
		allow = {
			war = yes
			wealth = 50
		}
		effect = {
			log = "work decision conscript_merchant_ships for [Root.GetBestName]"
			wealth = -50
			spawn_fleet = {
				province = closest 
				owner = ROOT
				disband_on_peace = yes
				earmark = conscripted_merchant_ships
				troops = {
					galleys = {
						20 20
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					any_war = {
						OR = {
							defender = {
								character = ROOT
							}
							attacker = {
								character = ROOT
							}
						}
					}
				}
			}
		}
	}
	donate_to_liege = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			liege = {
				has_ambition = obj_build_a_war_chest
			}
			NOT = {
				has_ambition = obj_build_a_war_chest
			}
			higher_tier_than = BARON
		}
		allow = {
			prisoner = no
			NOR = {
				trait = incapable
				is_inaccessible_trigger = yes
			}
			war = no
			#liege = { war = no }
			wealth = 200
			NOT = {
				liege = {
					owes_favor_to = ROOT
				}
			}
			custom_tooltip = {
				text = donation_cooldown_custom_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_modifier = donation_offer_timer
					}
				}
			}
		}
		effect = {
			log = "work decision donate_to_liege for [Root.GetBestName]"
			custom_tooltip = {
				text = offer_donation_custom_tooltip
				hidden_tooltip = {
					add_character_modifier = {
						modifier = donation_offer_timer
						years = 5
						hidden = yes
					}
					liege = {
						character_event = {
							id = ZE.22000 days = 5
						}
					}
				}
			}
			wealth = -200
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.01
				always = yes
			}
			modifier = {
				factor = 0
				trait = greedy
			}
			modifier = {
				factor = 0
				NOT = {
					opinion = {
						who = LIEGE value =  25
					}
				}
			}
			modifier = {
				factor = 0
				is_rival = LIEGE
			}
			modifier = {
				factor = 0
				NOT = {
					wealth = 300
				}
			}
			modifier = {
				factor = 2
				is_councillor = yes
			}
			modifier = {
				factor = 2
				trait = charitable
			}
			modifier = {
				factor = 2
				wealth = 600
			}
			modifier = {
				factor = 2
				wealth = 800
			}
			modifier = {
				factor = 2
				wealth = 1000
			}
			modifier = {
				factor = 10
				is_friend = LIEGE
			}
		}
	}
	demand_liege_title = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			ai = no
			is_playable = yes
			has_ambition = obj_gain_any_title
			liege = {
				NOT = {
					character = ROOT
				}
			}
			is_adult = yes
			prisoner = no
			NOT = {
				trait = incapable
			}
		}
		allow = {
			prestige = 60
			liege = {
				has_regent = no
				NOT = {
					has_opinion_modifier = {
						who = ROOT modifier = requested_land
					}
				}
				demesne_size = 3
				any_demesne_title = {
					can_be_given_away = yes
					tier = COUNT
					NOT = {
						location = {
							is_capital = yes
						}
					}
				}
			}
		}
		effect = {
			log = "work decision demand_liege_title for [Root.GetBestName]"
			prestige = -60
			liege = {
				opinion = {
					who = ROOT
					years = 2
					modifier = requested_land
				}
				random_demesne_title = {
					limit = {
						can_be_given_away = yes
						tier = COUNT
						NOT = {
							location = {
								is_capital = yes
							}
						}
					}
					save_event_target_as = vassal_wanted_title
				}
			}
			custom_tooltip = {
				text = demand_liege_title_tooltip
				hidden_tooltip = {
					liege = {
						letter_event = {
							id = 63041 days = 4
						}
					}
				} # "vassal_request_events.txt"
			}
		}
		ai_will_do = {
			factor = 0 # The AI is limited to the similar event 63040
		}
	}
	help_liege_manage_titles = {	#councillor will help manage liege titles

		is_high_prio = yes
		potential = {
			ai = no
			is_councillor = yes
			liege = {
				NOT = {
					character = ROOT
				}
				is_nomadic = no
			}
			OR = {
				has_job_title = job_chancellor
				has_job_title = job_treasurer
				has_job_title = job_spiritual
			}
			NOR = {
				trait = slothful
				had_character_flag = {
					flag = proposed_to_help_liege_with_titles days = 730
				}
			}
		}
		allow = {
			liege = {
				over_max_demesne_size = 4
				custom_tooltip = {
					text = NOT_PROPOSED_TITLE_HELP_RECENTLY_TOOLTIP
					hidden_tooltip = {
						OR = {
							NOT = {
								has_character_flag = has_been_proposed_about_titles
							}
							had_character_flag = {
								flag = has_been_proposed_about_titles days = 14
							}
						}
					}
				}
  				custom_tooltip = {
  					text = NOT_REFUSED_ANY_HELP_WITH_TITLES_TOOLTIP
  					hidden_tooltip = {
  						OR = {
							NOT = {
								has_character_flag = refused_any_help_with_titles
							}
							had_character_flag = {
								flag = refused_any_help_with_titles days = 712
							}
						}
					}
				}
  				custom_tooltip = {
  					text = NOT_GETTING_HELP_WITH_TITLES_TOOLTIP
  					hidden_tooltip = {
						NOT = {
							has_character_flag = getting_help_with_titles
						}
					}
				}
			}
		}
		effect = {
			log = "work decision help_liege_manage_titles for [Root.GetBestName]"
			set_character_flag = proposed_to_help_liege_with_titles
			liege = {
				set_character_flag = has_been_proposed_about_titles
			}
			if = {
				limit = {
					has_job_title = job_chancellor
				}
				character_event = {
					id = 108050
				}
			}
			if = {
				limit = {
					has_job_title = job_treasurer
				}
				character_event = {
					id = 108051
				}
			}
			if = {
				limit = {
					has_job_title = job_spiritual
				}
				character_event = {
					id = 108052
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	ask_help_to_manage_titles = {	#ask councillor to help manage titles

		only_rulers = yes
		is_high_prio = yes
		potential = {
			is_ruler = yes
			is_nomadic = no
			OR = {
				job_chancellor = {
					ai = no
				}
				ai = no
			}
			over_max_demesne_size = 4
			OR = {
				NOT = {
					has_character_flag = has_been_proposed_about_titles
				}
				had_character_flag = {
					flag = has_been_proposed_about_titles days = 14
				}
			}
			OR = {
				NOT = {
					has_character_flag = refused_any_help_with_titles
				}
				had_character_flag = {
					flag = refused_any_help_with_titles days = 712
				}
			}
			NOT = {
				has_character_flag = getting_help_with_titles
			}
		}
		allow = {
			over_max_demesne_size = 4
			custom_tooltip = {
				text = HAS_CHANCELLOR
				hidden_tooltip = {
					job_chancellor = {
						is_alive = yes
					}
				}
			}
		}
		effect = {
			log = "work decision ask_help_to_manage_titles for [Root.GetBestName]"
			set_character_flag = getting_help_with_titles
			job_chancellor = {
				character_event = {
					id = 108010
				}
				character_event = {
					id = 108005
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
		}
	}

	#Life Focus
	catholic_pilgrimage = {
		only_playable = yes
		potential = {
			has_dlc = "Sons of Abraham"
			OR = {
				NOT = {
					has_dlc = "Way of Life"
				}
				has_focus = focus_theology
				has_quest = quest_monastic_order_pilgrimage_christian
			}
			is_playable = yes
			OR = {
				religion = sigmarite
				religion = ulrican
				religion = myrmidian
				religion = taalite
				religion = shallyan
				religion = grail
				religion = false_grail
			}
			NOT = {
				trait = pilgrim
			}
		}
		allow = {
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			war = no
			in_command = no
			custom_tooltip = {
				text = UNOCCUPIED_DEMESNE_TITLE
				hidden_tooltip = {
					any_demesne_title = {
						NOT = {
							higher_tier_than = count
						}
						is_occupied = no
					}
				}
			}
			prisoner = no
			NOT = {
				is_inaccessible_trigger = yes
			}
			scaled_wealth = 0.2
			age = 16
			custom_tooltip = {
				text = health_travel_condition
				hidden_tooltip = {
					NOR = {
						trait = pregnant
						trait = incapable
						trait = blinded
						trait = has_tuberculosis
						trait = has_typhoid_fever
						trait = has_typhus
						trait = has_bubonic_plague
						trait = has_measles
						trait = has_small_pox
						trait = has_aztec_disease
					}
				}
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision catholic_pilgrimage for [Root.GetBestName]"
			scaled_wealth = -0.2
			set_character_flag = activated_pilgrimage
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				character_event = {
					id = SoA.5000
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.001			 # Only a small miNORity of Christians ever go on a pilgrimage
			}
			modifier = {
				factor = 3
				trait = zealous
			}
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
			modifier = {
				factor = 0
				NOT = {
					age = 30
				}
			}
		}
	}
	build_observatory = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			has_focus = focus_scholarship
			NOR = {
				trait = incapable
				trait = scholar
				trait = mystic
				has_character_flag = building_observatory
				has_character_flag = built_observatory
				has_character_modifier = studying_the_stars
				has_character_modifier = heliocentrist_scholar
				has_character_modifier = weird_scholar
			}
		}
		allow = {
			prisoner = no
			wealth = 25
			is_adult = yes
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
		}
		effect = {
			log = "work decision build_observatory for [Root.GetBestName]"
			wealth = -25
			set_character_flag = building_observatory
			hidden_tooltip = {
				character_event = {
					id = WoL.6000
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				NOT = {
					wealth = 50
				}
			}
			modifier = {
				factor = 0.1
			}
			modifier = {
				factor = 0.25
				trait = zealous
			}
			modifier = {
				factor = 2
				trait = cynical
			}
			modifier = {
				factor = 0.1
				NOT = {
					age = 30
				}
			}
		}
	}
	extort_subjects = { #loot lieges ambition - move to ambition
		only_playable = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			has_ambition = obj_build_a_war_chest
			is_tribal = no
			is_merchant_republic = no
		}
		allow = {
			prisoner = no
			NOR = {
				trait = incapable
				is_inaccessible_trigger = yes
			}
			custom_tooltip = {
				text = extort_cooldown_custom_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_modifier = extort_timer
					}
				}
			}
		}
		effect = {
			log = "work decision extort_subjects for [Root.GetBestName]"
			custom_tooltip = {
				text = extort_consequences_custom_tooltip
				hidden_tooltip = {
					add_character_modifier = {
						modifier = extort_timer
						months = 6
						hidden = yes
					}
					character_event = {
						id = ZE.21000
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.01
				always = yes
			}
			modifier = {
				factor = 0
				trait = kind
				trait = just
				trait = charitable
			}
			modifier = {
				factor = 0.2
				any_liege = {
					ai = no
				}
			}
			modifier = {
				factor = 0.2
				OR = {
					AND = {
						trait = kind
						trait = just
					}
					AND = {
						trait = kind
						trait = charitable
					}
					AND = {
						trait = just
						trait = charitable
					}
				}
			}
			modifier = {
				factor = 5
				NOT = {
					wealth = 0
				}
			}
			modifier = {
				factor = 2
				NOT = {
					wealth = 100
				}
				independent = yes
			}
			modifier = {
				factor = 0.1
				trait = patient
			}
			modifier = {
				factor = 3
				trait = greedy
			}
			modifier = {
				factor = 2
				trait = cruel
			}
			modifier = {
				factor = 2
				trait = arbitrary
			}
			modifier = {
				factor = 2
				trait = stressed
			}
			modifier = {
				factor = 0.5
				trait = kind
				NOR = {
					trait = just
					trait = charitable
				}
			}
			modifier = {
				factor = 0.5
				trait = just
				NOR = {
					trait = kind
					trait = charitable
				}
			}
			modifier = {
				factor = 0.5
				trait = charitable
				NOR = {
					trait = just
					trait = kind
				}
			}
			modifier = {
				factor = 0.5
				trait = content
			}
		}
	}

	#Conversion decisions
	convert_to_liege_religion = {
		potential = {
			is_playable = yes
			trait = creature_human
			NOR = {
				trait = witch_hunter
				trait = khorne_demon
				trait = nurgle_demon
				trait = slaanesh_demon
				trait = tzeentch_demon
				trait = vampire_lahmian_visible
				trait = vampire_carstein_visible
				trait = vampire_blood_visible
				trait = vampire_strigoi_visible
				trait = vampire_necrarch_visible
				trait = vampire_jade_visible
				trait = vampire_mahtmasi_visible
				trait = vampire_lahmian_hidden
				trait = vampire_carstein_hidden
				trait = vampire_blood_hidden
				trait = vampire_strigoi_hidden
				trait = vampire_necrarch_hidden
				trait = vampire_jade_hidden
				trait = vampire_mahtmasi_hidden
				culture_group = nehekharan_group
				culture_group = beastman_group
				culture_group = orc_group
				culture_group = goblin_group
				culture = witchhunter_culture
				culture = blooddragons_culture
			}
			liege = {
				trait = creature_human
				NOR = {
					character = ROOT
					religion = ROOT
				}
				religion_group = ROOT
			}
		}
		allow = {
			NOT = {
				trait = zealous
			}
		}
		effect = {
			log = "work decision convert_to_liege_religion for [Root.GetBestName]"
			prestige = -500
			if = {
				limit = {
					higher_tier_than = BARON
				}
				religion_authority = {
					modifier = ruler_converted_from
				}
			}
			liege = {
				reverse_religion = ROOT
			}
			if = {
				limit = {
					higher_tier_than = BARON
				}
				hidden_tooltip = {
					religion_authority = {
						modifier = ruler_converted_to
					}
				}
			}
			piety = 200
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	convert_to_liege_culture = {
		potential = {
			is_playable = yes
			trait = creature_human
			NOR = {
				trait = witch_hunter
				trait = khorne_demon
				trait = nurgle_demon
				trait = slaanesh_demon
				trait = tzeentch_demon
				trait = vampire_lahmian_visible
				trait = vampire_carstein_visible
				trait = vampire_blood_visible
				trait = vampire_strigoi_visible
				trait = vampire_necrarch_visible
				trait = vampire_jade_visible
				trait = vampire_mahtmasi_visible
				trait = vampire_lahmian_hidden
				trait = vampire_carstein_hidden
				trait = vampire_blood_hidden
				trait = vampire_strigoi_hidden
				trait = vampire_necrarch_hidden
				trait = vampire_jade_hidden
				trait = vampire_mahtmasi_hidden
				culture_group = nehekharan_group
				culture_group = beastman_group
				culture_group = orc_group
				culture_group = goblin_group
				culture = witchhunter_culture
				culture = blooddragons_culture
			}
			liege = {
				trait = creature_human
				NOR = {
					character = ROOT
					culture = ROOT
				}
				culture_group = ROOT
			}
		}
		allow = {
			prestige = 200
		}
		effect = {
			log = "work decision convert_to_liege_culture for [Root.GetBestName]"
			prestige = -200
			liege = {
				reverse_culture = ROOT
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	convert_to_parent_religion = {
		potential = {
			is_playable = yes
			independent = yes
			is_heretic = yes
			trait = creature_human
			NOR = {
				trait = witch_hunter
				trait = khorne_demon
				trait = nurgle_demon
				trait = slaanesh_demon
				trait = tzeentch_demon
				trait = vampire_lahmian_visible
				trait = vampire_carstein_visible
				trait = vampire_blood_visible
				trait = vampire_strigoi_visible
				trait = vampire_necrarch_visible
				trait = vampire_jade_visible
				trait = vampire_mahtmasi_visible
				trait = vampire_lahmian_hidden
				trait = vampire_carstein_hidden
				trait = vampire_blood_hidden
				trait = vampire_strigoi_hidden
				trait = vampire_necrarch_hidden
				trait = vampire_jade_hidden
				trait = vampire_mahtmasi_hidden
				culture_group = nehekharan_group
				culture_group = beastman_group
				culture_group = orc_group
				culture_group = goblin_group
				culture = witchhunter_culture
				culture = blooddragons_culture
			}
		}
		allow = {
			NOT = {
				trait = zealous
			}
		}
		effect = {
			log = "work decision convert_to_parent_religion for [Root.GetBestName]"
			prestige = -500
			if = {
				limit = {
					higher_tier_than = BARON
				}
				religion_authority = {
					modifier = ruler_converted_from
				}
			}
			abandon_heresy = yes
			if = {
				limit = {
					higher_tier_than = BARON
				}
				hidden_tooltip = {
					religion_authority = {
						modifier = ruler_converted_to
					}
				}
			}
			piety = 200
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}

	convert_to_feudalism_indep  = {
		only_independent = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			is_tribal = yes
			independent = yes			
			NOR = {
				religion_group = greenskin_gods_group
				religion = asrai_cadai
				trait = creature_beastman
				trait = creature_ogre
				culture_group = lizardman_group
				culture = amazon_main
				culture = miyan
				religion_group = chaos_gods_group
			}
		}
		allow = {
			war = no
			primary_title = {
				has_law = tribal_organization_4
			}
			capital_holding = {
				OR = {
					AND = {
						holding_type = tribal
						has_building = tb_hillfort_4
					}
					AND = {
						holding_type = tribal
						has_building = tb_NORscan_fort_4
					}
					holding_type = castle
				}
			}
		}
		effect = {
			log = "work decision convert_to_feudalism_indep  for [Root.GetBestName]"
			hidden_tooltip = {
				any_demesne_title = {
					limit = {
						tier = baron
						holding_type = tribal
					}
					convert_to = CASTLE
					refill_holding_levy = yes
					if = {
						limit = {
							dejure_liege_title = {
								holder = ROOT
								location = {
									num_of_empty_holdings = 2
								}
								NOT = {
									any_direct_de_jure_vassal_title = {
										holding_type = city
									}
								}
							}
						}
						location = {
							build_holding = {
								type = city
							}
						}
					}
					if = {
						limit = {
							dejure_liege_title = {
								holder = ROOT
								location = {
									num_of_empty_holdings = 2
								}
								NOT = {
									any_direct_de_jure_vassal_title = {
										holding_type = temple
									}
								}
							}
						}
						location = {
							build_holding  ={
								type = temple
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						trait = creature_human
						trait = creature_halfling
						trait = khorne_demon
						trait = nurgle_demon
						trait = slaanesh_demon
						trait = tzeentch_demon
					}
					NOT = {
						religion_group = ormazd_gods_group
					}
				}
				if = {
					limit = {
						ai = no
					}
					chronicle = {
						entry = CHRONICLE_ADOPTED_FEUDALISM
						picture = GFX_evt_castle_construction
					}
				}
				set_government_type = feudal_government
			}
			if = {
				limit = {
					trait = creature_human
					religion_group = ormazd_gods_group
				}
				if = {
					limit = {
						ai = no
					}
					chronicle = {
						entry = CHRONICLE_ADOPTED_IQTA
						picture = GFX_evt_castle_construction
					}
				}
				set_government_type = muslim_government
			}
			if = {
				limit = {
					culture_group = asur_group
				}
				set_government_type = highborn_government
			}
			if = {
				limit = {
					culture_group = druchi_group
				}
				set_government_type = druchii_government
			}
			if = {
				limit = {
					trait = creature_nehekharan
				}
				set_government_type = nehekharan_government
			}
			if = {
				limit = {
					trait = creature_dwarf
				}
				set_government_type = dwarf_government
			}
			if = {
				limit = {
					trait = creature_chaos_dwarf
					religion = hashut
				}
				set_government_type = chaosdwarf_government
			}
			if = {
				limit = {
					OR = {
						trait = vampire_carstein_visible
						trait = vampire_lahmian_visible
						trait = vampire_strigoi_visible
						trait = vampire_jade_visible
						trait = vampire_mahtmasi_visible
					}
				}
				set_government_type = vampiric_government
			}
			if = {
				limit = {
					higher_tier_than = king
				}
				primary_title = {
					add_law = feudal_administration
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.01
				religion = khorne
			}
			modifier = {
				factor = 0.1
				religion = nurgle
			}
			modifier = {
				factor = 0
				culture_group = kurgan_group
			}
			modifier = {
				factor = 0
				culture_group = hung_group
			}
		}
	}
	convert_to_feudalism_vassal = {
		is_high_prio = yes
		only_rulers = yes
		potential = {
			is_tribal = yes
			independent = no
			NOR = {
				religion_group = greenskin_gods_group
				religion = asrai_cadai
				trait = creature_beastman
				trait = creature_ogre
				culture_group = lizardman_group
				culture = amazon_main
				culture = miyan
			}
		}
		allow = {
			war = no
			liege = {
				OR = {
					is_feudal = yes
					is_republic = yes
					is_theocracy = yes
				}
			}
		}
		effect = {
			log = "work decision convert_to_feudalism_vassal for [Root.GetBestName]"
			hidden_tooltip = {
				any_demesne_title = {
					limit = {
						tier = baron
						holding_type = tribal
					}
					convert_to = CASTLE
					refill_holding_levy = yes
					if = {
						limit = {
							dejure_liege_title = {
								holder = ROOT
								location = {
									num_of_empty_holdings = 2
								}
								NOT = {
									any_direct_de_jure_vassal_title = {
										holding_type = city
									}
								}
							}
						}
						location = {
							build_holding = {
								type = city
							}
						}
					}
					if = {
						limit = {
							dejure_liege_title = {
								holder = ROOT
								location = {
									num_of_empty_holdings = 2
								}
								NOT = {
									any_direct_de_jure_vassal_title = {
										holding_type = temple
									}
								}
							}
						}
						location = {
							build_holding = {
								type = temple
							}
						}
					}
				}
				liege = {
					character_event = {
						id = 55100
					} # Notify Liege
				}
			}
			if = {
				limit = {
					OR = {
						trait = creature_human
						trait = creature_halfling
						trait = khorne_demon
						trait = nurgle_demon
						trait = slaanesh_demon
						trait = tzeentch_demon
					}
					NOT = {
						religion_group = ormazd_gods_group
					}
				}
				if = {
					limit = {
						ai = no
					}
					chronicle = {
						entry = CHRONICLE_ADOPTED_FEUDALISM
						picture = GFX_evt_castle_construction
					}
				}
				set_government_type = feudal_government
			}
			if = {
				limit = {
					trait = creature_human
					religion_group = ormazd_gods_group
				}
				if = {
					limit = {
						ai = no
					}
					chronicle = {
						entry = CHRONICLE_ADOPTED_IQTA
						picture = GFX_evt_castle_construction
					}
				}
				set_government_type = muslim_government
			}
			if = {
				limit = {
					culture_group = asur_group
				}
				set_government_type = highborn_government
			}
			if = {
				limit = {
					culture_group = druchi_group
				}
				set_government_type = druchii_government
			}
			if = {
				limit = {
					trait = creature_nehekharan
				}
				set_government_type = nehekharan_government
			}
			if = {
				limit = {
					trait = creature_dwarf
				}
				set_government_type = dwarf_government
			}
			if = {
				limit = {
					trait = creature_chaos_dwarf
					religion = hashut
				}
				set_government_type = chaosdwarf_government
			}
			if = {
				limit = {
					OR = {
						trait = vampire_carstein_visible
						trait = vampire_lahmian_visible
						trait = vampire_strigoi_visible
						trait = vampire_jade_visible
						trait = vampire_mahtmasi_visible
					}
				}
				set_government_type = vampiric_government
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.001
				liege = {
					OR = {
						NOT = {
							religion_group = ROOT
						}
						AND = {
							religion_group = old_gods_group
							NOT = {
								religion = ROOT
							}
						}
					}
				}
			}
			modifier = {
				factor = 0
				culture_group = kurgan_group
			}
			modifier = {
				factor = 0
				culture_group = hung_group
			}
			modifier = {
				factor = 0.01
				liege = {
					NOT = {
						culture_group = ROOT
					}
				}
			}
			modifier = {
				factor = 0.01
				religion = khorne
				liege = {
					NOT = {
						culture_group = ROOT
					}
				}
			}
			modifier = {
				factor = 0.01
				liege = {
					religion_group = ROOT
					NOR = {
						religion_group = old_gods_group
						religion = ROOT
					}
				}
			}
			modifier = {
				factor = 0.1
				liege = {
					culture_group = ROOT
					NOT = {
						culture = ROOT
					}
				}
			}
		}
	}
	convert_to_republic_indep  = {
		only_independent = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			is_tribal = yes
			independent = yes
			has_dlc = "The Republic"
			trait = creature_human
			is_vampire_trigger = no
			NOR = {
				religion_group = greenskin_gods_group
				religion = asrai_cadai
				trait = creature_beastman
				trait = creature_ogre
				culture_group = lizardman_group
				culture = amazon_main
				culture = miyan
				religion_group = chaos_gods_group
			}
		}
		allow = {
			war = no
			is_female = no
			higher_tier_than = COUNT
			primary_title = {
				has_law = tribal_organization_4
			}
			capital_scope = {
				port = yes
			}
			capital_holding = {
				OR = {
					AND = {
						holding_type = tribal
						has_building = tb_market_town_4
					}
					holding_type = city
				}
			}
		}
		effect = {
			log = "work decision convert_to_republic_indep  for [Root.GetBestName]"
			hidden_tooltip = {
				create_family_palace = yes
				set_government_type = merchant_republic_government
				if = {
					limit = {
						NOT = {
							num_of_government_vassals = {
								government = merchant_republic_government
								value = 1
							}
						}
					}
					any_unique_dynasty_vassal = {
						# gives random vassals a family palace
						count = 4
						limit = {
							is_female = no
							OR = {
								is_republic = yes
								is_tribal = yes
							}
							is_patrician = no
							prisoner = no
							NOT = {
								trait = incapable
							}
							is_adult = yes
							NOT = {
								dynasty = none
							}
						}
						if = {
							limit = {
								is_tribal = yes
							}
							hidden_tooltip = {
								any_demesne_title = {
									limit = {
										tier = baron
										holding_type = tribal
									}
									convert_to = CITY
									refill_holding_levy = yes
									if = {
										limit = {
											dejure_liege_title = {
												holder = PREVPREV
												location = {
													num_of_empty_holdings = 2
												}
												NOT = {
													any_direct_de_jure_vassal_title = {
														holding_type = castle
													}
												}
											}
										}
										location = {
											build_holding = {
												type = castle
											}
										}
									}
									if = {
										limit = {
											dejure_liege_title = {
												holder = PREVPREV
												location = {
													num_of_empty_holdings = 2
												}
												NOT = {
													any_direct_de_jure_vassal_title = {
														holding_type = temple
													}
												}
											}
										}
										location = {
											build_holding = {
												type = temple
											}
										}
									}
								}
							}
						}
						create_family_palace = yes
					}
				}
				any_demesne_title = {
					limit = {
						tier = baron
						holding_type = tribal
					}
					convert_to = CITY
					refill_holding_levy = yes
					if = {
						limit = {
							dejure_liege_title = {
								holder = ROOT
								location = {
									num_of_empty_holdings = 2
								}
								NOT = {
									any_direct_de_jure_vassal_title = {
										holding_type = castle
									}
								}
							}
						}
						location = {
							build_holding = {
								type = castle
							}
						}
					}
					if = {
						limit = {
							dejure_liege_title = {
								holder = ROOT
								location = {
									num_of_empty_holdings = 2
								}
								NOT = {
									any_direct_de_jure_vassal_title = {
										holding_type = temple
									}
								}
							}
						}
						location = {
							build_holding  ={
								type = temple
							}
						}
					}
				}
			}
			if = {
				limit = {
					ai = no
				}
				set_character_flag = achievement_res_publica
			}
			if = {
				limit = {
					ai = no
				}
				chronicle = {
					entry = CHRONICLE_FOUNDED_MERCHANT_REPUBLIC
					picture = GFX_evt_busy_trading_dock_republic
				}
			}
			set_government_type = merchant_republic_government
		}
		ai_will_do = {
			factor = 0
		}
	}

	#Employment
	employ_soldier = {
		potential = {
			ai = no
			NOR = {
				graphical_culture = treemangfx
				graphical_culture = chaosspawngfx
				graphical_culture = daemonettegfx
				graphical_culture = bloodlettergfx
				graphical_culture = plaguebearergfx
				graphical_culture = flamergfx
				trait = witch_hunter
				trait = vampire_blood_visible
				trait = vampire_jade_visible
			}
		}
		allow = {
			prestige = 10
			scaled_wealth = 0.2
			NOT = {
				has_character_modifier = in_seclusion
			}
		}
		effect = {
			log = "work decision employ_soldier for [Root.GetBestName]"
			wealth = -10
			if = {
				limit = {
					NOR = {
						culture_group = lizardman_group
						culture_group = amazon_group
					}
				}
				create_random_soldier = {
					random_traits = yes
					dynasty = none
					female = no
					age = 16
				}
			}
			if = {
				limit = {
					OR = {
						culture_group = lizardman_group
						culture_group = amazon_group
					}
				}
				create_random_soldier = {
					random_traits = yes
					dynasty = none
					female = yes
					age = 16
				}
			}
			hidden_tooltip = {
				new_character = {
					hidden_tooltip = {
						character_event = {
							id = wh_maintenance.51
						}
						if = {
							limit = {
								ROOT = {
									trait = vampire_strigoi_visible
								}
								NOT = {
									has_global_flag = strygos_culture_swapping
								}
							}
							culture = strigany
						}
						remove_trait = weak
						remove_trait = slow
						remove_trait = imbecile
						remove_trait = dull
						remove_trait = mystic
						remove_trait = socializer
						remove_trait = gamer
						remove_trait = hedonist
						remove_trait = duelist
						remove_trait = hunter
						remove_trait = strategist
						remove_trait = administrator
						remove_trait = architect
						remove_trait = gardener
						remove_trait = schemer
						remove_trait = impaler
						remove_trait = seducer
						remove_trait = seductress
						remove_trait = theologian
						remove_trait = scholar
						# Flavor Randomization
						random_list = {
							35 = {
								# Nothing
							}
							15 = {
								change_martial = 2
							}
							10 = {
								add_trait = robust
							}
							10 = {
								add_trait = duelist
							}
							10 = {
								add_trait = hunter
							}
							5 = {
								add_trait = strategist
							}
							5 = {
								change_martial = 4
							}
							5 = {
								if = {
									limit = {
										has_dlc = "Reapers"
									}
									add_trait = one_eyed
								}
							}
							5 = {
								add_trait = shrewd
							}
						}
					}
					set_character_flag = invited_soldier
					save_event_target_as = invited_character
				}
			}
			character_event = {
				id = NE.1
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	employ_priest = {
		potential = {
			ai = no
			NOR = {
				graphical_culture = treemangfx
				graphical_culture = chaosspawngfx
				graphical_culture = daemonettegfx
				graphical_culture = bloodlettergfx
				graphical_culture = plaguebearergfx
				graphical_culture = flamergfx
				trait = witch_hunter
				trait = vampire_blood_visible
				trait = vampire_jade_visible
			}
		}
		allow = {
			piety = 5
			NOT = {
				has_character_modifier = in_seclusion
			}
		}
		effect = {
			log = "work decision employ_priest for [Root.GetBestName]"
			piety = -5
			if = {
				limit = {
					religion_allows_female_temple_holders = no
					NOT = {
						religion = amazon
					}
				}
				create_random_priest = {
					random_traits = yes
					dynasty = random
					female = no
				}
			}
			if = {
				limit = {
					religion_allows_female_temple_holders = yes
					NOT = {
						religion = amazon
					}
				}
				random_list = {
					50 = {
						create_random_priest = {
							random_traits = yes
							dynasty = random
							female = no
						}
					}
					50 = {
						create_random_priest = {
							random_traits = yes
							dynasty = random
							female = yes
						}
					}
				}
			}
			if = {
				limit = {
					religion = amazon
				}
				create_random_priest = {
					random_traits = yes
					dynasty = random
					female = yes
				}
			}
			new_character = {
				hidden_tooltip = {
					if = {
						limit = {
							ROOT = {
								trait = vampire_strigoi_visible
							}
							NOT = {
								has_global_flag = strygos_culture_swapping
							}
						}
						culture = strigany
					}
					character_event = {
						id = wh_maintenance.51
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	employ_steward = {
		potential = {
			ai = no
			NOR = {
				graphical_culture = treemangfx
				graphical_culture = chaosspawngfx
				graphical_culture = daemonettegfx
				graphical_culture = bloodlettergfx
				graphical_culture = plaguebearergfx
				graphical_culture = flamergfx
				trait = witch_hunter
				trait = vampire_blood_visible
				trait = vampire_jade_visible
			}
		}
		allow = {
			scaled_wealth = 0.2
			NOT = {
				has_character_modifier = in_seclusion
			}
		}
		effect = {
			log = "work decision employ_steward for [Root.GetBestName]"
			scaled_wealth = -0.2
			if = {
				limit = {
					NOT = {
						culture_group = amazon_group
					}
				}
				create_random_steward = {
					random_traits = yes
					dynasty = random
					female = no
				}
			}
			if = {
				limit = {
					culture_group = amazon_group
				}
				create_random_steward = {
					random_traits = yes
					dynasty = random
					female = yes
				}
			}
			new_character = {
				hidden_tooltip = {
					if = {
						limit = {
							ROOT = {
								trait = vampire_strigoi_visible
							}
							NOT = {
								has_global_flag = strygos_culture_swapping
							}
						}
						culture = strigany
					}
					character_event = {
						id = wh_maintenance.51
					}					
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}
	present_debutante = {
		potential = {
			ai = no
			NOR = {
				graphical_culture = treemangfx
				graphical_culture = nehekharangfx
				graphical_culture = orcgfx
				graphical_culture = savageorcgfx
				graphical_culture = blackorcgfx
				graphical_culture = goblingfx
				graphical_culture = nightgoblingfx
				graphical_culture = forestgoblingfx
				graphical_culture = lizardmangfx
				graphical_culture = chaosspawngfx
				graphical_culture = daemonettegfx
				graphical_culture = bloodlettergfx
				graphical_culture = plaguebearergfx
				graphical_culture = flamergfx
				culture_group = orc_group
				culture_group = goblin_group
				culture_group = amazon_group
				trait = vampire_blood_visible
				trait = witch_hunter
				culture_group = lizardman_group
				trait = vampire_jade_visible
				culture_group = skaven_group
			}
		}
		allow = {
			scaled_wealth = 0.2
			NOT = {
				has_character_modifier = in_seclusion
			}
		}
		effect = {
			log = "work decision present_debutante for [Root.GetBestName]"
			scaled_wealth = -0.2
			create_character = {
				random_traits = yes
				dynasty = random
				female = yes
				age = 17
			}
			new_character = {
				set_character_flag = debutante
			}
			new_character = {
				hidden_tooltip = {
					if = {
						limit = {
							ROOT = {
								trait = vampire_strigoi_visible
							}
							NOT = {
								has_global_flag = strygos_culture_swapping
							}
						}
						culture = strigany
					}					
					character_event = {
						id = wh_maintenance.51
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}

	#Republic trade post decisions
	petition_doge_for_tp = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			is_merchant_republic = no
			is_patrician = yes
			liege = {
				is_merchant_republic = yes
			}
			NOT = {
				has_character_flag = petition_doge_for_tp_taken
			}
			OR = {
				liege = {
					any_vassal = {
						is_patrician = yes
						num_of_trade_post_diff = {
							character = ROOT
							value = 10
						}
					}
				}
				AND = {
					NOT = {
						num_of_trade_posts = 1
					}
					liege = {
						any_vassal = {
							is_patrician = yes
							num_of_trade_posts = 10
						}
					}
				}
			}
		}
		allow = {
			liege = {
				opinion = {
					who = ROOT
					value = 25
				}
			}
		}
		effect = {
			log = "work decision petition_doge_for_tp for [Root.GetBestName]"
			set_character_flag = petition_doge_for_tp_taken
			liege = {
				letter_event = {
					id = REP.500 days = 5 tooltip = EVTTOOLTIP_REP_500
				}
			}
		}
		ai_will_do = {
			factor = 1
		}
	}
	usurp_tp = {
		only_playable = yes
		is_high_prio = yes
		potential = {
			is_playable = yes
			is_merchant_republic = yes
			is_patrician = yes
			NOT = {
				has_character_flag = usurp_tp_taken
			}
			OR = {
				any_vassal = {
					is_patrician = yes
					num_of_trade_post_diff = {
						character = ROOT
						value = 10
					}
				}
				AND = {
					NOT = {
						num_of_trade_posts = 1
					}
					any_vassal = {
						is_patrician = yes
						num_of_trade_posts = 10
					}
				}
			}
		}
		allow = {
			custom_tooltip = {
				text = IS_NOT_INCAPACITATED
				is_incapacitated_trigger = no
			}
			is_merchant_republic = yes
		}
		effect = {
			log = "work decision usurp_tp for [Root.GetBestName]"
			set_character_flag = usurp_tp_taken
			if = {
				limit = {
					num_of_trade_posts = 1
					any_vassal = {
						is_patrician = yes
						num_of_trade_post_diff = {
							character = ROOT
							value = 10
						}
					}
				}
				random_vassal = {
					limit = {
						is_patrician = yes
						num_of_trade_post_diff = {
							character = ROOT
							value = 10
						}
					}
					set_character_flag = target_patrician_doge
					letter_event = {
						id = REP.510 days = 5 tooltip = EVTTOOLTIP_REP_510
					}
				}
			}
			if = {
				limit = {
					NOT = {
						num_of_trade_posts = 1
					}
					any_vassal = {
						is_patrician = yes
						num_of_trade_posts = 10
					}
				}
				random_vassal = {
					limit = {
						is_patrician = yes
						num_of_trade_posts = 10
					}
					set_character_flag = target_patrician_doge
					letter_event = {
						id = REP.510 days = 5 tooltip = EVTTOOLTIP_REP_510
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
		}
	}

	#Tribal 
	raise_tribal_units = {
		only_playable = yes
		is_high_prio = yes
		is_mercenary = yes
		potential = {
			is_playable = yes
			is_tribal = yes
			is_landed = yes
			OR = {
				ai = no
				any_war = {
					OR = {
						any_defender = {
							character = ROOT
							is_primary_war_defender = yes
						}
						any_attacker = {
							character = ROOT
							is_primary_war_attacker = yes
						}
					}
				}
			}
			NOT = {
				OR = {
					trait = creature_orc
					trait = creature_goblin
					religion_group = greenskin_gods_group
					culture_group = orc_group
					culture_group = goblin_group
				}
			}
		}
		allow = {
			war = yes
			prestige = 500
		}
		effect = {
			log = "work decision raise_tribal_units for [Root.GetBestName]"
			prestige = -500
			if = {
				limit = {
					OR = {
						culture_group = kurgan_group
						culture_group = hung_group
					}
				}
				capital_scope = {
					PREV = {
						spawn_unit = {
							owner = ROOT
							province = PREV
							home = PREV
							troops = {
								archers = {
									500 500
								}
								light_infantry = {
									1500 1500
								}
								light_cavalry = {
									500 500
								}
							}
							attrition = 1.0
							disband_on_peace = yes
							maintenance_multiplier = 0.5
						}
					}
				}
				break = yes
			}
			capital_scope = {
				PREV = {
					spawn_unit = {
						owner = ROOT
						province = PREV
						home = PREV
						troops = {
							archers = {
								500 500
							}
							light_infantry = {
								1500 1500
							}
							heavy_infantry = {
								300 300
							}
							light_cavalry = {
								200 200
							}
						}
						attrition = 1.0
						disband_on_peace = yes
						maintenance_multiplier = 0.5
					}
				}
			}
		}
		ai_will_do = {
			factor = 0 # decisions with the "is_mercenary" will not be calculated from the script
		}
	}
	raise_defensive_unit = {
		only_playable = yes
		is_high_prio = yes
		is_mercenary = yes
		potential = {
			has_dlc = "The Old Gods"
			is_playable = yes
			is_tribal = yes
			is_landed = yes
			OR = {
				religion = northern_gods
				religion = old_faith
				religion = akghan
			}
		}
		allow = {
			war = yes
			custom_tooltip = {
				text = raise_defensive_unit_tooltip
				hidden_tooltip = {
					any_war = {
						any_defender = {
							character = ROOT
							is_primary_war_defender = yes
						}
						#Defending against heathen
						OR = {
							#Defender is NORthern gods but attacker is not
							AND = {
								ROOT = {
									religion = northern_gods
								}
								attacker = {
									NOT = {
										religion = northern_gods
									}
								}
							}
							#Defender is west old faith but attacker is not
							AND = {
								ROOT = {
									religion = old_faith
								}
								attacker = {
									NOT = {
										religion = old_faith
									}
								}
							}
							#Defender is akghan but attacker is not
							AND = {
								ROOT = {
									religion = akghan
								}
								attacker = {
									NOT = {
										religion = akghan
									}
								}
							}
						}
					}
				}
			}
			piety = 200
		}
		effect = {
			log = "work decision raise_defensive_unit for [Root.GetBestName]"
			custom_tooltip = {
				text = summon_defensive_unit
			}
			piety = -200
			hidden_tooltip = {
				capital_scope = {
					ROOT = {
						spawn_unit = {
							owner = ROOT
							home = PREV
							province = PREV
							disband_on_peace = yes
							maintenance_multiplier = 0.25
							attrition = 1.0
							troops = {
								archers = {
									400 400
								}
								light_infantry = {
									1000 1000
								}
								heavy_infantry = {
									350 350
								}
								light_cavalry = {
									250 250
								}
							}
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0
		}
	}

	#Nomadic
	choose_warhorse_nomad = { # Choose Warhorse (Nomad)
		only_playable = yes
		potential = {
			is_playable = yes
			is_nomadic = yes
			NOR = {
				religion_group = greenskin_gods_group
				religion = asrai_cadai
				trait = creature_beastman
				trait = creature_ogre
				has_character_modifier = nomad_warhorse
			}
		}
		allow = {
			is_adult = yes
			prisoner = no
			NOR = {
				trait = incapable
				religion_group = greenskin_gods_group
				religion = asrai_cadai
				trait = creature_beastman
				trait = creature_ogre
			} #Can't ride horses without breaking their back
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					NOT = {
						has_character_flag = do_not_disturb
					}
				}
			}
			wealth = 20
		}
		effect = {
			log = "work decision choose_warhorse_nomad for [Root.GetBestName]"
			wealth = -20
			custom_tooltip = {
				text = nomad_acquires_warhorse_tooltip
			}
			hidden_tooltip = {
				long_character_event = {
					id = HL.6000
				}
			} # Select and name horse
			hidden_tooltip = {
				character_event = {
					id = HL.6500 days = 3500 random = 2000
				}
			} # Horse dies
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 0.01
			modifier = {
				factor = 0
				NOT = {
					wealth = 200
				}
			}
		}
	}	
	carousing_with_the_men = {
		only_rulers = yes
		potential = {
			has_dlc = "Horse Lords"
			is_ruler = yes
			has_character_flag = is_mercenary_leader
			NOR = {
				trait = witch_hunter
				trait = vampire_blood_visible
			}
			primary_title = {
				NOT = {
					has_title_flag = ze_dyn_merc
				}
				mercenary = yes
				band_creator = {
					is_alive = yes
					OR = {
						government = nomadic_government
						has_character_modifier = mercenary_traditions
					}
				}
			}
		}
		allow = {
			prisoner = no
			wealth = 25
			NOT = {
				trait = chaste
			}
		}
		effect = {
			log = "work decision carousing_with_the_men for [Root.GetBestName]"
			wealth = -25
			prestige = 10
			primary_title = {
				random_list = {
					53 = {
					}
					40 = {
						change_title_army_size = 0.02 # Increase of percentage
					}
					5 = {
						ROOT = {
							add_trait = drunkard
						}
					}
					2 = {
						ROOT = {
							tooltip = {
								add_trait = lovers_pox
							}
							hidden_tooltip = {
								character_event = {
									id = 6359 days = 15 random = 5
								}
							}  #Gives lover's pox
						}
					}
				}
				band_creator = {
					character_event = {
						id = HL.10701
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.015
			}
			modifier = {
				factor = 0
				trait = greedy
			}
			modifier = {
				factor = 2
				trait = lustful
			}
			modifier = {
				factor = 2
				trait = gluttonous
			}
			modifier = {
				factor = 2
				trait = hedonist
			}
			modifier = {
				factor = 2
				trait = charitable
			}
			modifier = {
				factor = 2
				wealth = 200
			}
			modifier = {
				factor = 2
				wealth = 400
			}
			modifier = {
				factor = 3
				wealth = 800
			}
			modifier = {
				factor = 4
				wealth = 1200
			}
			modifier = {
				factor = 5
				wealth = 1600
			}
			modifier = {
				factor = 0.1
				primary_title = {
					band_creator = {
						is_alive = no
					}
				}
			}
		}
	}
	create_mercenary_company = {
		only_playable = yes
		filter = home_court
		ai_target_filter = home_court
		from_potential = {
			is_playable = yes
			has_dlc = "Horse Lords"
			is_adult = yes
			prisoner = no
			NOT = {
				trait = incapable
			}
			OR = {
				government = nomadic_government
				has_character_modifier = mercenary_traditions
			}
		}
		potential = {
			is_female = no
			mercenary = no
			dynasty = FROM
			OR = {
				father_even_if_dead = {
					character = FROM
				}
				any_sibling = {
					character = FROM
				}
			}
		}
		allow = {
			is_adult = yes
			is_ruler = no
			prisoner = no
			custom_tooltip = {
				text = inaccessible_tooltip
				hidden_tooltip = {
					NOT = {
						is_inaccessible_trigger = yes
					}
				}
			}
			NOT = {
				trait = incapable
			}
			dynasty = FROM
			liege = {
				character = FROM
			}
			FROM = {
				OR = {
					AND = {
						government = nomadic_government
						unused_manpower = 500
						max_manpower = 500
					}
					AND = {
						NOT = {
							government = nomadic_government
						}
						demesne_garrison_size = 500
					}
				}
			}
			OR = {
				FROM = {
					government = nomadic_government
				}
				has_character_modifier = mercenary_traditions
			}
		}
		effect = {
			log = "work decision create_mercenary_company for [Root.GetBestName]"
			FROM = {
				if = {
					limit = {
						is_nomadic = yes
					}
					clan_title = {
						create_title = {
							tier = DUKE
							name = DYNAMIC_MERCENARY_COMPANY
							landless = yes
							temporary = yes
							adventurer = yes
							custom_created = yes
							culture = ROOT
							holder = ROOT
							base_title = THIS
							mercenary = yes
							ruler = "CAPTAIN"
							ruler_female = "CAPTAIN"
							foa = "CAPTAIN_FOA"
						}
					}
				}
				if = {
					limit = {
						is_nomadic = no
					}
					primary_title = {
						create_title = {
							tier = DUKE
							name = DYNAMIC_MERCENARY_COMPANY
							landless = yes
							temporary = yes
							adventurer = yes
							custom_created = yes
							culture = ROOT
							holder = ROOT
							base_title = THIS
							mercenary = yes
							ruler = "CAPTAIN"
							ruler_female = "CAPTAIN"
							foa = "CAPTAIN_FOA"
						}
					}
				}
				ROOT = {
					set_defacto_liege = THIS
				}
			}
			set_character_flag = is_mercenary_leader
			add_trait = adventurer
			add_character_modifier = {
				modifier = started_mercenary_company months = 30
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.1
			}
			modifier = {
				factor = 0
				OR = {
					any_mercenary_band = {
						count = 3
						band_creator = {
							character = FROM
						}
					}
					FROM = {
						is_primary_war_attacker = yes
						is_primary_war_defender = yes
					}
				}
			}
			modifier = {
				factor = 0.5
				any_mercenary_band = {
					count = 1
					band_creator = {
						character = FROM
					}
				}
			}
			modifier = {
				factor = 0.5
				any_mercenary_band = {
					count = 2
					band_creator = {
						character = FROM
					}
				}
			}
			modifier = {
				factor = 2
				martial = 10
			}
			modifier = {
				factor = 3
				martial = 14
			}
			modifier = {
				factor = 4
				martial = 18
			}
			modifier = {
				factor = 2
				prestige = 100
			}
			modifier = {
				factor = 3
				prestige = 400
			}
			modifier = {
				factor = 4
				prestige = 1000
			}
			modifier = {
				factor = 2
				trait = misguided_warrior
			}
			modifier = {
				factor = 2
				trait = tough_soldier
			}
			modifier = {
				factor = 2
				trait = skilled_tactician
			}
			modifier = {
				factor = 2
				trait = brilliant_strategist
			}
		}
	}
	dissolve_mercenary_company = {
		only_playable = yes
		filter = dynasty
		ai_target_filter = dynasty
		from_potential = {
			is_playable = yes
			is_landed = yes
			has_dlc = "Horse Lords"
			NOT = {
				trait = vampire_blood_visible
			}
			OR = {
				government = nomadic_government
				has_character_modifier = mercenary_traditions
			}
		}
		potential = {
			mercenary = yes
			NOT = {
				government = congregation_government
			}
			primary_title = {
				NOT = {
					has_title_flag = ze_dyn_merc
				}
				band_creator = {
					character = FROM
				}
			}
		}
		allow = {
			OR = {
				custom_tooltip = {
					text = is_mercenary_leader_YEAR
					had_character_flag = {
						flag = is_mercenary_leader days = 1825
					}
				}
				prisoner = yes
			}
			primary_title = {
				NOT = {
					has_raised_standing_troops = yes
				}
				band_creator = {
					character = FROM
				}
			}
		}
		effect = {
			log = "work decision dissolve_mercenary_company for [Root.GetBestName]"
			primary_title = {
				activate_title = {
					title = THIS status = no
				}
				destroy_landed_title = THIS
			}
			move_character = FROM
			clr_character_flag = is_mercenary_leader
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.01
			}
			modifier = {
				factor = 0.5
				health = 7
			}
			modifier = {
				factor = 2
				NOT = {
					health = 5
				}
			}
			modifier = {
				factor = 4
				NOT = {
					health = 4
				}
			}
			modifier = {
				factor = 10
				NOT = {
					health = 3
				}
			}
			modifier = {
				factor = 2
				age = 30
			}
			modifier = {
				factor = 3
				age = 35
			}
			modifier = {
				factor = 4
				age = 40
			}
			modifier = {
				factor = 5
				age = 45
			}
			modifier = {
				factor = 2
				FROM = {
					age = 45
				}
			}
			modifier = {
				factor = 3
				FROM = {
					age = 55
				}
			}
			modifier = {
				factor = 4
				FROM = {
					age = 65
				}
			}
		}
	}
	increase_mercenary_size = {
		only_playable = yes
		potential = {
			is_playable = yes
			prisoner = no
			wealth = 25
			has_dlc = "Horse Lords"
			NOR = {
				government = congregation_government
				trait = vampire_blood_visible
			}
			primary_title = {
				mercenary = yes
				adventurer = yes
				NOT = {
					has_title_flag = ze_dyn_merc
				}
				band_creator = {
					OR = {
						government = nomadic_government
						has_character_modifier = mercenary_traditions
					}
				}
			}
		}
		allow = {
			always = yes
		}
		effect = {
			log = "work decision increase_mercenary_size for [Root.GetBestName]"
			wealth = -25
			primary_title = {
				change_title_army_size = 0.05 # Increase of percentage
				band_creator = {
					if = {
						limit = {
							is_alive = yes
						}
						character_event = {
							id = HL.10700
						}
					}
				}
			}
		}
		revoke_allowed = {
			always = no
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.025
				primary_title = {
					band_creator = {
						is_alive = yes
					}
				}
			}
			modifier = {
				factor = 0
				NOT = {
					trait = ambitious
				}
				trait = greedy
			}
			modifier = {
				factor = 2
				trait = proud
			}
			modifier = {
				factor = 2
				trait = ambitious
			}
			modifier = {
				factor = 2
				wealth = 200
			}
			modifier = {
				factor = 2
				wealth = 400
			}
			modifier = {
				factor = 3
				wealth = 800
			}
			modifier = {
				factor = 4
				wealth = 1200
			}
			modifier = {
				factor = 5
				wealth = 1600
			}
		}
	}
	recruit_troops_norse = {
		only_rulers = yes
		potential = {
			has_character_flag = raiding_adventurer
			ai = yes
			war = no
			wealth = 100
			NOR = {
				realm_levies = 6000
				government = nomadic_government
			}
			OR = {
				AND = {
					year = 700
					NOR = {
						year = 900
						realm_levies = 5500
					}
				}
				AND = {
					year = 900
					NOR = {
						year = 1000
						realm_levies = 6100
					}
				}
				AND = {
					year = 1000
					NOR = {
						year = 1100
						realm_levies = 6500
					}
				}
				AND = {
					year = 1100
					NOR = {
						year = 1150
						realm_levies = 6800
					}
				}
				AND = {
					year = 1150
					NOR = {
						year = 1200
						realm_levies = 7100
					}
				}
				AND = {
					year = 1200
					NOR = {
						year = 1250
						realm_levies = 8500
					}
				}
				AND = {
					year = 1250
					NOT = {
						realm_levies = 9800
					}
				}
			}
		}
		effect = {
			log = "work decision recruit_troops_NORse for [Root.GetBestName]"
			wealth = -75
			location = {
				ROOT = {
					spawn_unit = {
						province = PREV
						owner = THIS
						leader = none
						attrition = 0
						#				disband_on_peace = yes
						reinforces = yes
						is_looter = yes
						can_toggle_looting = no
						cannot_inherit = yes
						troops = {
							light_infantry = {
								1 500
							}
							heavy_infantry = {
								1 40
							}
							archers = {
								1 200
							}
						}
						merge = yes
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.1
			}
		}
	}
	recruit_troops_nomad = {
		only_rulers = yes
		potential = {
			is_ruler = yes
			has_character_flag = raiding_adventurer
			ai = yes
			war = no
			wealth = 100
			government = nomadic_government
			OR = {
				AND = {
					year = 700
					NOR = {
						year = 900
						realm_levies = 4000
					}
				}
				AND = {
					year = 900
					NOR = {
						year = 1000
						realm_levies = 4400
					}
				}
				AND = {
					year = 1000
					NOR = {
						year = 1100
						realm_levies = 4700
					}
				}
				AND = {
					year = 1100
					NOR = {
						year = 1150
						realm_levies = 4900
					}
				}
				AND = {
					year = 1150
					NOR = {
						year = 1200
						realm_levies = 5300
					}
				}
				AND = {
					year = 1200
					NOR = {
						year = 1250
						realm_levies = 6100
					}
				}
				AND = {
					year = 1250
					NOT = {
						realm_levies = 7600
					}
				}
			}
		}
		effect = {
			log = "work decision recruit_troops_nomad for [Root.GetBestName]"
			wealth = -75
			location = {
				ROOT = {
					spawn_unit = {
						province = PREV
						owner = THIS
						leader = none
						attrition = 0
						#						disband_on_peace = yes
						reinforces = yes
						is_looter = yes
						can_toggle_looting = no
						cannot_inherit = yes
						troops = {
							light_cavalry = {
								1 250
							}
							horse_archers = {
								1 250
							}
						}
						merge = yes
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.1
			}
		}
	}
}
#END